---
name: Build and Push Golang Image to AWS ECR
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-and-push:
    name: Build and Push to ECR
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image-ecr
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: test-ecr
        IMAGE_TAG: ${{ github.sha }}
      working-directory: ./build
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # - name: Deploy on EC2
    #   env:
    #     ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     ECR_REPOSITORY: test-ecr
    #     IMAGE_TAG: ${{ github.sha }}
    #     AWS_DEFAULT_REGION: ap-south-1

    # - name: SSH to Instance
    #   uses: appleboy/ssh-action@master 
    #   with:
    #     host: ec2-15-207-223-21.ap-south-1.compute.amazonaws.com
    #     username: ubuntu
    #     key: ${{ secrets.PRIVATE_KEY }}
    #     port: 22
    #     script: |
    #       https://github.com/Saurabh-Adivarekar/Terragrunt2.git

    # - name: Run command on AWS instance
    #   run: |
    #       ssh Github_user@15.207.223.21 'echo "Hello from GitHub Workflow" > file.txt'
        
    - name: executing remote ssh commands using ssh key
      uses: appleboy/ssh-action@v1.0.0
      with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            aws configure set aws_access_key_id ${{ env.AWS_ACCESS_KEY_ID  }} --profile fiftyfive && aws configure set aws_secret_access_key ${{ env.AWS_ACCESS_SECRET_KEY }} --profile fiftyfive && aws configure set region ${{ env.AWS_REGION }} --profile fiftyfive && aws configure set output "text" --profile fifyfive
            aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 205429787317.dkr.ecr.ap-south-1.amazonaws.com
            docker pull 205429787317.dkr.ecr.ap-south-1.amazonaws.com/test-ecr:latest
